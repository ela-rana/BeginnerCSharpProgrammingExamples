using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DateTimeManipulationPractice
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //Get current date and time
            DateTime d = DateTime.Now;
            Console.WriteLine("Date and time for now is: {0}", d);
            //Add or subtract a year
            Console.WriteLine($"DateTime 5 years ago was {d.AddYears(-5)} and one year in the future will be {d.AddYears(1)}");
            //similarly to add or subtract months, days, etc. the methods to call would be:
            //d.AddMonths, d.AddSeconds, d.AddHours, etc. (there is not AddWeeks Method though)
            Console.WriteLine($"d.Subtract(d.AddDays(7) gives you: {d.Subtract(d.AddDays(7))}");
            Console.WriteLine("Ticks for the Date and time for now is: {0}", d.Ticks);  //current DateTime  in ticks

            DateTime e = DateTime.Parse("May 7 2022");  //this format Parses
            DateTime f = DateTime.Parse("5/5/2021 23:59:00");   //this format Parses as well
            Console.WriteLine("Date and time for e after doing DateTime.Parse(\"May 7 2022\") is: {0}", e); //if no time is entered 
                        //default time of 12:00:00AM is entered (00:00 time)
            Console.WriteLine("Date and time for f after doing DateTime.Parse(\"5/5/2021 23:59:00\") is: {0}", f);
            TimeSpan span = e.Subtract(f);
            Console.WriteLine($"e-f gives: {span}");    //result: 366.00:01:00 = 366 days and 1 minute
            Console.WriteLine($"e-f individual values:  Days- {span.Days}   Hours-  {span.Hours}"); //can use for Days, Hours, Minutes, Seconds
                                //cannot use for months, weeks, years
            Console.ReadKey();
        }
    }
}
